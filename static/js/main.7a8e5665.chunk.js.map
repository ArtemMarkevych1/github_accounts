{"version":3,"sources":["components/NavBar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","exact","AlertContext","createContext","GithubContext","Search","useState","value","setValue","show","useContext","github","alert","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","folowers","public_repos","public_dists","following","console","log","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a8e5665.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar = () => {\n  return (\n    <>\n      <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n        <div className=\"navbar-brand\">\n          Github Search\n        </div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink to={'/'} exact className=\"nav-link\">\n              Main\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={'/about'} className=\"nav-link\">\n              Info\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n\n}\n","import {createContext} from 'react'\n\nexport const AlertContext = createContext()\n","import {createContext} from 'react'\n\nexport const GithubContext = createContext()\n","import React, {useContext, useState} from 'react'\nimport {AlertContext} from \"../context/alert/alertContext\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Search = () => {\n\n  const [value, setValue] = useState('')\n\n  const {show} = useContext(AlertContext)\n\n  const github = useContext(GithubContext)\n\n  const alert = useContext(AlertContext)\n\n  const onSubmit = event => {\n    if (event.key !== 'Enter') {\n      return\n    }\n\n    github.clearUsers()\n\n    if (value.trim()) {\n      alert.hide()\n      github.search(value.trim())\n    } else {\n      show('Put data to input')\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Write user's name...\"\n        onKeyPress={onSubmit}\n        onChange={event => setValue(event.target.value)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nexport const Card = ({user}) => {\n  return (\n    <div className=\"card\">\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\"/>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          {user.login}\n        </h5>\n        <Link className=\"btn bg-primary\" to={'/profile/' + user.login}>Get more information</Link>\n      </div>\n    </div>\n  )\n}\n","import React, {Fragment, useContext} from 'react'\nimport {Search} from \"../components/Search\";\nimport {Card} from \"../components/Card\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Home = () => {\n\n  const {loading, users} = useContext(GithubContext)\n\n  return (\n    <Fragment>\n      <Search/>\n      <div className=\"row mt-4\">\n        {loading\n          ? <p>Loading...</p>\n          : users.map(user => {\n            return (\n              <div className=\"col-sm-4 mb-4\">\n                <Card key={user.id} user={user}/>\n              </div>\n            )\n          })\n        }\n      </div>\n    </Fragment>\n  )\n}\n","import React from 'react'\n\nexport const About = () => {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Information</h1>\n        <p className=\"lead\">The version of application is 10.0</p>\n      </div>\n    </div>\n  )\n}\n","import React, {Fragment} from 'react'\n\nexport const Repos = ({repos}) => (\n  <Fragment>\n    {repos.map(repo => (\n      <div className=\"card mb-3\" key={repo.id}>\n        <div className=\"card-body\">\n          <h5>\n            <a href={repo.html_url} target={'_blank'} rel=\"noopener noreferrer\">\n              {repo.name}\n            </a>\n          </h5>\n        </div>\n      </div>\n    ))}\n  </Fragment>\n)\n","import React, {Fragment, useContext, useEffect} from 'react'\nimport {GithubContext} from \"../context/github/githubContext\";\nimport {Link} from \"react-router-dom\";\nimport {Repos} from \"../components/Repos\";\n\nexport const Profile = ({match}) => {\n\n  const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\n  const urlName = match.params.name\n\n  useEffect(() => {\n    getUser(urlName)\n    getRepos(urlName)\n    // eslint-disable-next-line\n  }, [])\n\n  if (loading) {\n    return <p className={'text-center'}>Loading...</p>\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    folowers,\n    public_repos,\n    public_dists,\n    following\n  } = user\n\n  console.log(match)\n  return (\n    <Fragment>\n      <Link to={'/'} className={'btn btn-link'}>Return on the Main page</Link>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img src={avatar_url} alt={name} style={{width: '150px'}}/>\n              <h1>{name}</h1>\n              {location && <p>Location: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {\n                bio && <Fragment>\n                  <h3>Bio</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              }\n              <a href={html_url} className={'btn btn-dark'} target={'_blank'}>Visit profile</a>\n              <ul>\n                {login && <li>\n                  <strong>Username: </strong>{login}\n                </li>}\n                {company && <li>\n                  <strong>Company: </strong>{login}\n                </li>}\n                {blog && <li>\n                  <strong>Website: </strong>{login}\n                </li>}\n              </ul>\n              <div className=\"badge badge-primary\">Followers: {folowers}</div>\n              <div className=\"badge badge-success\">Follow: {following}</div>\n              <div className=\"badge badge-info\">Repos: {public_repos}</div>\n              <div className=\"badge badge-dark\">Dists: {public_dists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Repos repos={repos}/>\n    </Fragment>\n  )\n}\n","import React, {useContext} from 'react'\nimport {AlertContext} from \"../context/alert/alertContext\";\n\nexport const Alert = () => {\n\n  const {alert, hide} = useContext(AlertContext)\n\n  if (!alert) return null\n\n  return (\n    <div\n      className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n      role=\"alert\"\n    >{alert.text}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  )\n}\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: state => state\n};\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n  return handler(state, action)\n}\n","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_USER = 'GET_USER'\nexport const SEARCH_USERS = 'SEARCH_USERS'\nexport const SET_LOADING = 'SET_LOADING'\n\n","import React, {useReducer} from 'react'\nimport {AlertContext} from \"./alertContext\";\nimport {alertReducer} from \"./alertReducer\";\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nexport const AlertState = ({children}) => {\n\n  const [state, dispatch] = useReducer(alertReducer, null)\n\n  const hide = () => dispatch({type: HIDE_ALERT})\n  const show = (text, type = 'secondary') => dispatch({type: SHOW_ALERT, payload: {type, text}})\n\n  return (\n    <AlertContext.Provider value={{\n      hide, show, alert: state\n    }}>\n      {children}\n    </AlertContext.Provider>\n  )\n}\n","import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\n\nconst handlers = {\n  [SEARCH_USERS]: (state, {payload}) => ({\n    ...state,\n    users: payload,\n    loading: false\n  }),\n  [GET_REPOS]: (state, {payload}) => ({\n    ...state,\n    repos: payload,\n    loading: false\n  }),\n  [GET_USER]: (state, {payload}) => ({\n    ...state,\n    user: payload,\n    loading: false\n  }),\n  [SET_LOADING]: state => ({\n    ...state,\n    loading: true\n  }),\n  [CLEAR_USERS]: state => ({\n    ...state,\n    users: []\n  }),\n\n  DEFAULT: state => state\n};\n\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n  return handler(state, action)\n}\n","import React, {useReducer} from 'react'\nimport {GithubContext} from \"./githubContext\";\nimport {githubReducer} from \"./githubReducer\";\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\nimport axios from 'axios'\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = url => {\n  return `${url}client_id =${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({children}) => {\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const search = async value => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    )\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    })\n  }\n\n  const getUser = async (name) => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    )\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    })\n  }\n\n  const getRepos = async (name) => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n    )\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    })\n  }\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    })\n  }\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    })\n  }\n\n  const {user, users, repos, loading} = state\n\n  return (\n    <GithubContext.Provider value={{\n      search,\n      getUser,\n      getRepos,\n      clearUsers,\n      setLoading,\n      user,\n      users,\n      repos,\n      loading\n    }\n    }>\n      {children}\n    </GithubContext.Provider>\n  )\n}\n","import React from 'react'\nimport {Navbar} from \"./components/NavBar\";\nimport {Home} from \"./pages/Home\";\nimport {About} from \"./pages/About\";\nimport {Profile} from \"./pages/Profile\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {GithubState} from \"./context/github/GithubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar/>\n          <div className=\"container pt-4\">\n            <Alert alert={{text: 'Test a'}}/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/profile/:name\" component={Profile}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}